// wait for document's ready state
$(document).ready(function () {

   $(window).on("resize", function () {
      updateSize();
   });

   setTimeout(function () {
      init();
   }, 1);
});

function init() {

   /// init() start ///

   var totalItems = Object.size(contents);
   var totalNames = Object.size(names);
   var totalTargets = Object.size(targets);
   var clicksEnabled = false;
   var numberOpen = 0;
   var characterSelected = 0;
   var targetsUsed = [];

   // buttons //     

   $('.instructions .btn-close').on("click", function () {
      toggleInstructions();
   });
   $('.popup .close-popup, .popup .cover').on("click", function () {
      $('.popup').fadeOut(500);
      revealNextChar();
   });

   $('.buttons-div .btn1').on("click", function () {
      $(this).hide();
      $('.base-div .graph').fadeOut(500);
      $('.base-div .graph2').fadeIn(500);
      changeInstructions(instructions[2]);
      btnsEnabled[1] = false;
      btnsEnabled[2] = true;
      clearPulse();
      checkProgress();
      var nextAction = $('.buttons-div .btn2');
      nextAction.focus();
      animatePulse(nextAction);
      revealText(1, 4);
   });

   $('.buttons-div .btn2').on("click", function () {
      $(this).hide();
      $('.base-div .graph').fadeOut(500);
      $('.base-div .graph3').fadeIn(500);
      $('.instructions').css({
         left: '25%'
      });
      changeInstructions(instructions[3]);
      btnsEnabled[2] = false;
      clearPulse();
      checkProgress();
      revealText(5, 8);
      startDragNDrop();
   });


   // functions //

   function revealText(i, total) {
      if (total === void(0)) {
         total = 1;
      }
      for (i; i <= total; i++) {
         $('.names-div .name' + i).html(names[i].name);
      }
   }

   function revealNextChar() {
      var nextAction = $('.characters-div .characters:not(.done)').first();
      if (!nextAction.hasClass('done')) {
         nextAction.fadeIn(500);
         nextAction.focus();
         animatePulse(nextAction);
         characterSelected = parseInt(nextAction.attr('data-num'), 10);
         if (numberOpen == 1) {
            changeInstructions(instructions[4]);
         } else if (numberOpen == totalItems) {
            changeInstructions(instructions[5]);
         }
      }
   }

   function startDragNDrop() {
      $('.targets').fadeIn(500);
      revealNextChar();

      $('.characters-div .characters').on("click", function (e) {
         e.preventDefault();
         var n = parseInt($(this).attr('data-num'), 10);
         if ($(this).hasClass('done')) {
            openPopup(n);
         } else {
            pickChar(n);
         }
      });

      $('.targets').on("click", function (e) {
         e.preventDefault();
         var n = parseInt($(this).attr('data-num'), 10);
         if (!$(this).hasClass('disabled')) {
            pickTarget(n);
         }
      });

      $('.characters-div .characters').draggable({
         revert: 'invalid',
         start: function (event, ui) {
            var n = parseInt($(this).attr('data-num'), 10);
            $(this).attr('style', 'display:block;');
            pickChar(n);
         }
      });

      $('.targets').droppable({
         accept: $('.characters-div .characters'),
         drop: function (event, ui) {

            var n = parseInt($(this).attr('data-num'), 10);

            pickTarget(n, 100);

         }
      });

   }

   function pickChar(n) {
      characterSelected = n;
      clearPulse();
      var nextAction = $('.targets:not(.targets.ui-droppable-disabled)');
      animatePulse(nextAction, '1.2');
      nextAction.first().focus();
   }

   function pickTarget(n, duration) {
      var char = $('.character' + characterSelected);
      var target = contents[characterSelected].target;

      if (!char.hasClass('done')) {

         var nextStep;
         if (matchesAny(n, target)) {
            nextStep = function () {
               disableTarget(n);
               disableDrag(char);
               openPopup(characterSelected);
            };
         } else {
            nextStep = function () {
               animateWrong(char, n);
               disableDrag(char);
            };
         }

         charGoTo(char, n, nextStep, duration);
         clearPulse();
      }
   }

   function charGoTo(obj, targetN, callback, duration) {

      if (duration === void(0)) {
         duration = 1000;
      }

      var style = targets[targetN].pos;
      style.transition = 'all ' + duration + 'ms ease-in-out';
      obj.css(style);

      if (callback !== void(0)) {
         setTimeout(function () {
            callback();
         }, duration);
      }
   }

   function goToCorrect(obj) {

      var arrTarget = contents[characterSelected].target;

      for (var i = 0; i <= arrTarget.length; i++) {
         if (targetsUsed[arrTarget[i]] !== true) {
            var targetN = arrTarget[i];
            break;
         }
      }

      disableTarget(targetN);

      charGoTo(obj, targetN, function () {
         openPopup(characterSelected);
      });
   }

   function disableTarget(targetN) {
      targetsUsed[targetN] = true;
      var obj = $('.target' + targetN);
      obj.droppable("disable");
      obj.attr('disabled', true);
      obj.addClass('disabled');
   }

   function disableDrag(char) {
      char.addClass('done');
      char.draggable("disable");
   }

   function matchesAny(value, array) {
      var result = false;
      for (var i = 0; i <= array.length; i++) {
         if (value == array[i]) {
            result = true;
         }
      }
      return result;
   }

   function animateWrong(obj, n) {

      obj.css({
         transition: 'all 0.1s ease-in-out'
      });

      setTimeout(function () {
         turnLeft(obj);
      }, 100);
      setTimeout(function () {
         turnRight(obj);
      }, 200);
      setTimeout(function () {
         turnLeft(obj);
      }, 300);
      setTimeout(function () {
         turnRight(obj);
      }, 400);
      setTimeout(function () {
         turnLeft(obj);
      }, 500);
      setTimeout(function () {
         turnRight(obj);
      }, 600);
      setTimeout(function () {
         resetTurn(obj);
         goToCorrect(obj);
      }, 700);

      function turnLeft(obj) {
         obj.css({
            transform: 'translateX(-30%)'
         });
      }

      function turnRight(obj) {
         obj.css({
            transform: 'translateX(30%)'
         });
      }

      function resetTurn(obj) {
         obj.css({
            transform: 'translateX(0)'
         });
      }

   }

   function changeInstructions(content) {
      $('.instructions .text').html(content);
      openInstructions();
   }

   function openInstructions() {
      toggleInstructions(true);
   }

   function toggleInstructions(changeToOpen) {

      if (changeToOpen) {
         $('.instructions').addClass('closed');
      }

      var icon = $('.instructions .btn-close').find('i');
      if ($('.instructions').hasClass('closed')) {
         $('.instructions').removeClass('closed');
         icon.attr('class', 'fas fa-chevron-up');
      } else {
         $('.instructions').addClass('closed');
         icon.attr('class', 'fas fa-chevron-down');
      }
   }

   function startInteractive() {

      $('.instructions .text').html(instructions[1]);

      clicksEnabled = true;

      var firstAction = $('.btn1');
      animatePulse(firstAction);
      // firstAction.focus();
      checkProgress();

   }

   function buildInteractive() {
      var output = '';
      for (var i = 1; i <= totalNames; i++) {
         output += '<div class="names name' + i + '">?</div>';
      }
      $('.names-div').html(output);
      $('.names-div .names').each(function (n) {
         $(this).css(names[n + 1].pos);
      });

      output = '';
      for (var i = 1; i <= totalItems; i++) {
         if (contents[i].target === void(0)) {
            contents[i].target = i;
         }
         var name = contents[i].name;
         output += '<a href="" class="characters character' + i + '" data-num="' + i + '"><div class="label">' + name + '</div><img src="imgs/character' + i + '.svg" alt="" class="img-responsive"></a>';
      }
      $('.characters-div').html(output);

      output = '';
      for (var i = totalTargets; i >= 1; i--) {
         output += '<a href="" class="targets target' + i + '" data-num="' + i + '"><div class="circle"></div></a>';
      }
      $('.characters-div').append(output);
      $('.characters-div .targets').each(function () {
         var n = $(this).attr('data-num');
         $(this).css(targets[n].pos);
      });

      $('.characters-div .characters').hover(function () {
         labelOn($(this));
      }, function () {
         labelOff($(this));
      });
      $('.characters-div .characters').focusin(function () {
         labelOn($(this));
      });
      $('.characters-div .characters').focusout(function () {
         labelOff($(this));
      });

      function labelOn(obj) {
         obj.find('.label').stop(true, true);
         obj.find('.label').fadeIn(500);
      };

      function labelOff(obj) {
         if (!obj.is(':focus')) {
            obj.find('.label').stop(true, true);
            obj.find('.label').fadeOut(500);
         }
      };

   }

   function checkProgress() {
      $('.btns').each(function () {
         var obj = $(this);
         var n = parseInt(obj.attr('data-num'), 10);
         if (btnsEnabled[n] || !lockedNavigation) {
            obj.removeClass('disabled');
            obj.removeAttr('disabled');
         } else {
            obj.addClass('disabled');
            obj.attr('disabled', true);
         }
      });
   }

   function openPopup(n) {
      //open popup
      var title = '<h2>' + contents[n].name + '</h2>';
      $('.popup .text').html(title + '<p>' + contents[n].content + '</p>');
      $('.popup').fadeIn(500);
      $('.close-popup').focus();
      clearPulse();
      numberOpen = n;
   }

   var intPulse = [];

   function animatePulse(elements, scale) {

      if (scale === void(0)) {
         scale = 1.05;
      }

      elements.each(function () {

         var obj = $(this);

         if (!obj.hasClass('ui-draggable-disabled') && !obj.hasClass('ui-droppable-disabled') && !obj.hasClass('disabled')) {

            obj.addClass('focusAction');

            //start
            animation1(obj);
            //loop
            intPulse.push(setInterval(function () {
               animation1(obj);
            }, 2000));
         }
      });

      function animation1(obj) {
         obj.css({
            transform: 'scale(' + scale + ')'
         });
         setTimeout(function () {
            animation2(obj);
         }, 1000);
      }

      function animation2(obj) {
         obj.css({
            transform: 'scale(1.0)'
         });
      }

   }

   function clearPulse() {
      for (var i = 0; i < intPulse.length; i++) {
         clearInterval(intPulse[i]);
      }
      intPulse = [];
      $('.focusAction').removeClass('focusAction');
   }



   //// execute ////

   buildInteractive();

   //intro

   setTimeout(function () {

      $('#app').fadeIn(500);

      startInteractive();

   }, 1);


   //

   /// init() end ///

}

// "goto" function
(function ($) {
   $.fn.goTo = function () {
      $('html, body').animate({
         scrollTop: $(this).offset().top + 'px'
      });
      return this; // for chaining...
   };
})(jQuery);


Object.size = function (obj) {
   var size = 0,
      key;
   for (key in obj) {
      if (obj.hasOwnProperty(key))
         size++;
   }
   return size;
};


function updateSize() {

   var proportion = 808 / 600;

   var W = $('.main-container').width();

   var H = W / proportion;

   $('.main-container').css({
      'min-height': H
   });
}